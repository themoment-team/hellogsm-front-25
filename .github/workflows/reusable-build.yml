name: Reusable Build Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment (prod or stage)'
      push_to_ecr:
        required: false
        type: boolean
        default: false
        description: 'Whether to push images to ECR'
    secrets:
      CLIENT_ENV_FILE:
        required: true
      ADMIN_ENV_FILE:
        required: true
      AWS_ACCESS_KEY:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_REGION:
        required: false
      AWS_ECR_CLIENT_REPOSITORY:
        required: false
      AWS_ECR_ADMIN_REPOSITORY:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Install dependencies
        run: pnpm install

      - name: Create .env files for build
        run: |
          cat > .env.client << EOF
          ${{ secrets.CLIENT_ENV_FILE }}
          EOF
          cat > .env.admin << EOF
          ${{ secrets.ADMIN_ENV_FILE }}
          EOF

      - name: All Package Build
        run: |
          cp .env.client apps/client/.env
          cp .env.admin apps/admin/.env
          pnpm build

      - name: Configure AWS credentials
        if: inputs.push_to_ecr
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        if: inputs.push_to_ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Client build
        run: |
          docker build \
          $(cat .env.client | sed 's/^/--build-arg /' | tr '\n' ' ') \
          -f ./client.Dockerfile \
          -t ${{ inputs.push_to_ecr && secrets.AWS_ECR_CLIENT_REPOSITORY || format('hello-{0}-client', inputs.environment) }}:latest \
          .

      - name: Docker Admin build
        run: |
          docker build \
          $(cat .env.admin | sed 's/^/--build-arg /' | tr '\n' ' ') \
          -f ./admin.Dockerfile \
          -t ${{ inputs.push_to_ecr && secrets.AWS_ECR_ADMIN_REPOSITORY || format('hello-{0}-admin', inputs.environment) }}:latest \
          .

      - name: Push image to ECR
        if: inputs.push_to_ecr
        run: |
          docker push ${{ secrets.AWS_ECR_CLIENT_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ECR_ADMIN_REPOSITORY }}:latest
